// <auto-generated />
using InventoryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryAPI.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InventoryAPI.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InventoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InventoryDescription = "This inventory is a mock inventory just for test",
                            InventoryName = "Test"
                        });
                });

            modelBuilder.Entity("InventoryAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BuyPrice")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SellPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyPrice = 100,
                            Description = "this item is a mock item just for test",
                            InventoryId = 1,
                            Name = "test",
                            Quantity = 50,
                            SellPrice = 150
                        },
                        new
                        {
                            Id = 2,
                            BuyPrice = 100,
                            Description = "this item is a mock item just for test",
                            InventoryId = 1,
                            Name = "test",
                            Quantity = 50,
                            SellPrice = 150
                        },
                        new
                        {
                            Id = 3,
                            BuyPrice = 100,
                            Description = "this item is a mock item just for test",
                            InventoryId = 1,
                            Name = "test",
                            Quantity = 50,
                            SellPrice = 150
                        },
                        new
                        {
                            Id = 4,
                            BuyPrice = 100,
                            Description = "this item is a mock item just for test",
                            InventoryId = 1,
                            Name = "test",
                            Quantity = 50,
                            SellPrice = 150
                        },
                        new
                        {
                            Id = 5,
                            BuyPrice = 100,
                            Description = "this item is a mock item just for test",
                            InventoryId = 1,
                            Name = "test",
                            Quantity = 50,
                            SellPrice = 150
                        });
                });

            modelBuilder.Entity("InventoryAPI.Models.Item", b =>
                {
                    b.HasOne("InventoryAPI.Models.Inventory", "Inventory")
                        .WithMany("Items")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("InventoryAPI.Models.Inventory", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
